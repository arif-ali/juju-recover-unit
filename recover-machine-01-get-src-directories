#!/usr/bin/bash

[[ -z "$DEBUG" ]] || set -x # Enable debugging
set -e # exit on error to be safe

if [[ -z "$RM_STAGEDIR" && -d _stage ]]
then
  export RM_STAGEDIR="_stage"
else
  echo "     Did you run recover-machine-00-set-stage?"
  exit 1
fi

if [[ -r $RM_STAGEDIR/00-FUNCTIONS && \
        -r $RM_STAGEDIR/00-LOCALENV  ]]
then
  source $RM_STAGEDIR/00-FUNCTIONS 
  source $RM_STAGEDIR/00-LOCALENV 
else
  echo "     Can't find all my files:"
  ls -l $RM_STAGEDIR/00-FUNCTIONS
  ls -l $RM_STAGEDIR/00-LOCALENV
  exit 1
fi

echo "     Archive active unit directories (expect and ignore 'socket ignored' warnings)"
juju ssh "$RM_ACTIVE_UNIT" sudo tar -C /var/lib -c${V}f /tmp/RM_var_lib.tar \
                                             ./juju/agents/$RM_ACTIVE_UNIT_FILENAME \
                                             ./juju/tools/$RM_ACTIVE_UNIT_FILENAME
juju ssh "$RM_ACTIVE_UNIT" sudo tar -C /etc/systemd/system -c${V}f /tmp/RM_etc_systemd_system.tar \
                                            ./jujud-${RM_ACTIVE_UNIT_FILENAME}-exec-start.sh \
                                            ./jujud-${RM_ACTIVE_UNIT_FILENAME}.service
juju ssh "$RM_ACTIVE_UNIT" ls -l /tmp/RM_*.tar

echo "     Retrieve active unit directory archives"
juju scp "$RM_ACTIVE_UNIT":/tmp/RM_var_lib.tar            $RM_STAGEDIR/01_SRC_var_lib.tar
juju scp "$RM_ACTIVE_UNIT":/tmp/RM_etc_systemd_system.tar $RM_STAGEDIR/01_SRC_etc_systemd_system.tar
ls -l $RM_STAGEDIR/01_SRC_*.tar

recover_mkdir $RM_STAGEDIR/01_SRC_var_lib
recover_mkdir $RM_STAGEDIR/01_SRC_etc_systemd_system

echo "     Extract active unit directories from archives"
sudo tar -C      $RM_STAGEDIR/01_SRC_var_lib            -x${V}f $RM_STAGEDIR/01_SRC_var_lib.tar
sudo tar -C      $RM_STAGEDIR/01_SRC_etc_systemd_system -x${V}f $RM_STAGEDIR/01_SRC_etc_systemd_system.tar
echo "$RM_STAGEDIR/01_SRC_var_lib:"
ls -l $RM_STAGEDIR/01_SRC_var_lib
echo "$RM_STAGEDIR/01_SRC_etc_systemd_system:"
ls -l $RM_STAGEDIR/01_SRC_etc_systemd_system
